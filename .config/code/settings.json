{
  "workbench.colorTheme": "Ayu Mirage",
  // we try to make semantic highlighting look good
  "editor.semanticHighlighting.enabled": true,
  // prevent VSCode from modifying the terminal colors
  "terminal.integrated.minimumContrastRatio": 1,
  // "catppuccin.italicKeywords": false,
  // make the window's titlebar use the workbench colors
  "window.titleBarStyle": "custom",
  "workbench.iconTheme": "catppuccin-mocha",
  "editor.fontFamily": "JetBrainsMono Nerd Font Mono, Menlo, Monaco, 'Courier New', monospace",
  "editor.fontSize": 14,
  "editor.fontLigatures": true,
  "jest.shell": "/bin/zsh",
  "editor.wordWrap": "on",
  "editor.lineNumbers": "relative",
  "editor.suggest.insertMode": "insert",
  "editor.cursorSurroundingLines": 10,
  "editor.bracketPairColorization.enabled": true,
  "editor.guides.bracketPairs": "active",
  "editor.codeActionsOnSave": {
    "source.fixAll": "never"
    // "source.sortImports": "explicit",
    // "source.organizeImports": "explicit"
  },
  "cSpell.diagnosticLevel": "Hint",
  "workbench.colorCustomizations": {
    "editorHint.border": "#ffcc66",
    "editorHint.foreground": "#f000"
  },
  "javascript.inlayHints.enumMemberValues.enabled": true,
  "javascript.inlayHints.functionLikeReturnTypes.enabled": true,
  "javascript.inlayHints.parameterNames.enabled": "all",
  "typescript.inlayHints.enumMemberValues.enabled": true,
  "typescript.inlayHints.functionLikeReturnTypes.enabled": true,
  "typescript.inlayHints.parameterNames.enabled": "all",
  "typescript.inlayHints.parameterTypes.enabled": true,
  "typescript.inlayHints.propertyDeclarationTypes.enabled": true,
  "typescript.inlayHints.variableTypes.enabled": true,
  "search.exclude": {
    "**/node_modules": true,
    "**/dist": true,
    "**/bower_components": true,
    "**/*.code-search": true
  },
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "editor.formatOnSave": true,
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[sql]": {
    "editor.defaultFormatter": "mtxr.sqltools"
  },
  "eslint.lintTask.options": ". --cache",
  "jest.runMode": "on-demand",
  "git.autofetch": "all",
  "git.useEditorAsCommitInput": false,
  "lazygit-vscode.configPath": "/Users/itamar/.config/code/lazygit-vscode-config.yml",
  "lazygit-vscode.autoHidePanel": true,
  "lazygit-vscode.autoHideSideBar": true,
  "lazygit-vscode.autoMaximizeWindow": true,
  "lazygit-vscode.lazygitPath": "/opt/homebrew/bin/lazygit",
  "debug.javascript.autoAttachFilter": "disabled",
  "cSpell.userWords": [
    "Catppuccin",
    "Cmin",
    "CORALOGIX",
    "Ctid",
    "cyera",
    "datascan",
    "lucene",
    "nino",
    "titlebar",
    "Uids",
    "upserted"
  ],
  "typescript.disableAutomaticTypeAcquisition": true,
  "settingsSync.keybindingsPerPlatform": false,
  "git.confirmSync": false,
  "gitlens.views.commitDetails.files.layout": "tree",
  // "python.analysis.nodeExecutable": "${env:FNM_DIR}/aliases/default/bin/node",
  // "python.analysis.nodeExecutable": "/Users/itamar/.local/share/fnm/aliases/default/bin/node",
  "workbench.settings.applyToAllProfiles": ["python.analysis.nodeExecutable"],
  "terminal.integrated.fontSize": 15,
  "terminal.integrated.fontFamily": "JetBrainsMono Nerd Font Mono",
  "editor.minimap.enabled": false,
  "githubPullRequests.fileListLayout": "tree",
  "editor.accessibilitySupport": "off",
  "workbench.editor.revealIfOpen": true,
  "vim.easymotion": false,
  "vim.highlightedyank.enable": true,
  "vim.highlightedyank.duration": 100,
  "vim.incsearch": true,
  "vim.useSystemClipboard": true,
  "vim.useCtrlKeys": true,
  "vim.hlsearch": true,
  "vim.operatorPendingModeKeyBindingsNonRecursive": [
    {
      "before": ["("],
      "after": ["i", "("]
    },
    {
      "before": [")"],
      "after": ["a", "("]
    },
    {
      "before": ["["],
      "after": ["i", "["]
    },
    {
      "before": ["]"],
      "after": ["a", "["]
    },

    {
      "before": ["{"],
      "after": ["i", "{"]
    },
    {
      "before": ["L"],
      "after": ["$"]
    },
    {
      "before": ["H"],
      "after": ["^"]
    }
  ],
  "vim.insertModeKeyBindings": [
    {
      "before": ["j", "j"],
      "after": ["<Esc>"]
    },
    {
      "before": ["<C-h>"],
      "commands": ["editor.action.triggerParameterHints"],
      "silent": true
    },
    {
      "before": ["<C-k>"],
      "commands": ["editor.action.triggerParameterHints"],
      "silent": true
    },
    {
      "before": ["<C-y>"],
      "commands": ["editor.action.inlineSuggest.commit"],
      "silent": true
    }
  ],
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": ["0"],
      "after": ["_"]
    },
    {
      "before": [":"],
      "commands": ["workbench.action.showCommands"],
      "silent": true
    },
    {
      "before": ["<esc>"],
      "commands": [":nohl"]
    },
    {
      "before": ["leader", ";"],
      "commands": ["whichkey.show"]
    },
    // Pull requests
    {
      "before": ["<leader>", "<S-r>"],
      "commands": ["workbench.view.extension.github-pull-request", "focusList"] // Toggle Github Pull Requests
    },
    {
      "before": ["<leader>", "r", "c"],
      "commands": ["pr.create"]
    },
    {
      "before": ["<leader>", "r", "o"],
      "commands": ["pr.openPullRequestOnGitHub"]
    },
    {
      "before": ["<leader>", "r", "r"],
      "commands": [
        "workbench.view.extension.github-pull-request",
        "list.focusFirst",
        "list.focusDown",
        "list.focusDown"
      ] // Toggle Github Pull Requests
    },
    {
      "before": ["<leader>", "r", "v"],
      "commands": [
        "pr.markFileAsViewed",
        "workbench.view.extension.github-pull-request",
        "focusList",
        "list.focusDown"
      ] // Mark file as viewed
    },
    {
      "before": ["]", "r"],
      "commands": ["editor.action.nextCommentedRangeAction"] // Jump to next review comment
    },
    {
      "before": ["[", "r"],
      "commands": ["editor.action.previousCommentedRangeAction"] // Jump to previous review comment
    },
    // NAVIGATION
    // switch b/w buffers
    { "before": ["<S-h>"], "commands": [":bprevious"], "silent": true },
    { "before": ["<S-l>"], "commands": [":bnext"], "silent": true },

    // splits
    { "before": ["leader", "v"], "commands": [":vsplit"] },
    { "before": ["leader", "h"], "commands": [":split"] },

    // panes
    {
      "before": ["<C-h>"],
      "commands": ["workbench.action.focusLeftGroup"],
      "silent": true
    },
    {
      "before": ["<C-j>"],
      "commands": ["workbench.action.navigateDown"],
      "silent": true
    },
    {
      "before": ["<C-k>"],
      "commands": ["workbench.action.navigateUp"],
      "silent": true
    },
    {
      "before": ["<C-l>"],
      "commands": ["workbench.action.focusRightGroup"],
      "silent": true
    },
    // vertical scrolling
    {
      "before": ["<C-d>"],
      "after": ["<C-d>", "z", "t"]
    },
    {
      "before": ["<C-u>"],
      "after": ["<C-u>", "z", "t"]
    },
    // UI
    {
      "before": ["<C-/>"],
      "commands": ["workbench.action.terminal.toggleTerminal"],
      "silent": true
    },
    {
      // Zen and Focus
      "before": ["leader", "z"],
      "commands": [
        "workbench.action.closeSidebar",
        "workbench.action.closePanel"
      ],
      "silent": true
    },
    {
      "before": ["leader", "Z"],
      "commands": ["workbench.action.toggleZenMode"],
      "silent": true
    },
    // NICE TO HAVE
    {
      "before": ["u"],
      "commands": ["undo"]
    },
    {
      "before": ["<C-r>"],
      "commands": ["redo"]
    },
    { "before": ["leader", "w"], "commands": [":w!"] },
    { "before": ["leader", "x"], "commands": [":x!"] },
    {
      "before": ["[", "d"],
      "commands": ["editor.action.marker.prev"]
    },
    {
      "before": ["]", "d"],
      "commands": ["editor.action.marker.next"]
    },
    {
      "before": ["leader", "q"],
      "commands": ["workbench.panel.markers.view.focus"]
    },
    {
      "before": ["<leader>", "r", "n"],
      "commands": ["editor.action.rename"]
    },
    {
      "before": ["<leader>", "c", "a"],
      "commands": ["editor.action.quickFix"]
    },
    {
      "before": ["leader", "f"],
      "commands": ["editor.action.formatDocument"]
    },
    {
      "before": ["leader", "f", "i"],
      "commands": [
        "editor.action.organizeImports",
        "editor.action.formatDocument"
      ]
    },
    // LSP
    {
      "before": ["g", "d"],
      "after": ["g", "d", "z", "t"],
      "silent": true
    },
    {
      "before": ["g", "p", "d"],
      "commands": ["editor.action.peekDefinition"],
      "silent": true
    },
    {
      "before": ["g", "i"],
      "commands": ["editor.action.goToImplementation"],
      "silent": true
    },
    {
      "before": ["g", "p", "i"],
      "commands": ["editor.action.peekImplementation"],
      "silent": true
    },
    {
      "before": ["g", "r"],
      "commands": ["editor.action.referenceSearch.trigger"],
      "silent": true
    },
    {
      "before": ["g", "t"],
      "commands": ["editor.action.goToTypeDefinition"],
      "silent": true
    },
    {
      "before": ["g", "p", "t"],
      "commands": ["editor.action.peekTypeDefinition"],
      "silent": true
    },
    {
      "before": ["K"],
      "commands": ["editor.action.showDefinitionPreviewHover"],
      "silent": true
    }
  ],
  "vim.normalModeKeyBindings": [
    // Search
    {
      "before": ["<leader>", "s", "b"],
      "commands": ["workbench.action.showAllEditors"],
      "silent": true
    },
    {
      "before": ["<leader>", "s", "f"],
      "commands": ["workbench.action.quickOpen"],
      "silent": true
    },
    {
      "before": ["<leader>", "s", "g"],
      "commands": ["workbench.action.quickTextSearch"],
      "silent": true
    },
    {
      "before": ["<leader>", "s", "s"],
      "commands": ["workbench.action.gotoSymbol"],
      "silent": true
    },
    {
      "before": ["<leader>", "s", "t"],
      "commands": ["workbench.action.quickOpenTerm"],
      "silent": true
    },
    // Harpoon
    {
      "before": ["<leader>", "a"],
      "commands": ["vscode-harpoon.addEditor"]
    },
    {
      "before": ["<leader>", "p"],
      "commands": ["vscode-harpoon.editorQuickPick"],
      "silent": true
    },
    {
      "before": ["<leader>", "e"],
      "commands": ["vscode-harpoon.editEditors"],
      "silent": true
    },
    {
      "before": ["<leader>", "j"],
      "commands": ["vscode-harpoon.gotoEditor1"],
      "silent": true
    },
    {
      "before": ["<leader>", "k"],
      "commands": ["vscode-harpoon.gotoEditor2"],
      "silent": true
    },
    {
      "before": ["<leader>", "l"],
      "commands": ["vscode-harpoon.gotoEditor3"],
      "silent": true
    },
    // Bookmarks
    {
      "before": ["<leader>", "m"],
      "commands": ["bookmarks.toggle"]
    },
    {
      "before": ["<leader>", "b", "l"],
      "commands": ["bookmarks.list"]
    },
    {
      "before": ["<leader>", "b", "a"],
      "commands": ["bookmarks.listFromAllFiles"]
    },
    {
      "before": ["<leader>", "b", "c"],
      "commands": ["bookmarks.clear"]
    },
    {
      "before": ["<leader>", "b", "r"],
      "commands": ["bookmarks.clearFromAllFiles"]
    },
    // Settings navigation
    {
      "before": ["<leader>", "v", "s"],
      "commands": ["workbench.action.openSettingsJson"]
    },
    {
      "before": ["<leader>", "v", "k"],
      "commands": ["workbench.action.openGlobalKeybindingsFile"]
    },
    // Git
    {
      "before": ["<leader>", "g", "a"],
      "commands": ["git.stageAll"]
    },
    {
      "before": ["<leader>", "g", "A"],
      "commands": ["git.commitAmend"]
    },
    {
      "before": ["<leader>", "g", "b"],
      "commands": ["git.checkout"]
    },
    {
      "before": ["<leader>", "g", "c"],
      "commands": ["git.commitStaged"]
    },
    {
      "before": ["<leader>", "g", "g"],
      "commands": ["lazygit-vscode.toggle"]
    },
    {
      "before": ["<leader>", "g", "l"],
      "commands": ["gitlens.showQuickRepoHistory"]
    },
    {
      "before": ["<leader>", "g", "o"],
      "commands": ["gitlens.openFileOnRemote"]
    },
    {
      "before": ["<leader>", "g", "p"],
      "commands": ["git.pull"]
    },
    {
      "before": ["<leader>", "g", "P"],
      "commands": ["git.push"]
    },
    {
      "before": ["<leader>", "g", "r"],
      "commands": ["git.clean"]
    },
    {
      "before": ["<leader>", "g", "s"],
      "commands": ["git.stage"]
    },
    {
      "before": ["<leader>", "g", "S"],
      "commands": ["git.stash"]
    },
    {
      "before": ["<leader>", "g", "u"],
      "commands": ["git.unstage"]
    },
    // Git Hunks
    {
      "before": ["<leader>", "h", "p"], // Peek Git diff for the changed line
      "commands": ["editor.action.dirtydiff.next"]
    },
    {
      "before": ["<leader>", "h", "r"], // Revert hunk
      "commands": ["git.revertSelectedRanges"]
    },
    {
      "before": ["<leader>", "h", "s"], // Stage hunk
      "commands": ["git.stageSelectedRanges"]
    },
    {
      "before": ["<leader>", "h", "u"], // Unstage hunk
      "commands": ["git.unstageSelectedRanges"]
    },
    {
      "before": ["]", "c"], // Jump to next Git change
      "commands": ["workbench.action.editor.nextChange"]
    },
    {
      "before": ["[", "c"], // Jump to previous Git change
      "commands": ["workbench.action.editor.previousChange"]
    },
    // Debugging
    {
      "before": ["<leader>", "d", "b"],
      "commands": ["editor.debug.action.toggleBreakpoint"]
    },
    {
      "before": ["<leader>", "d", "B"],
      "commands": ["editor.debug.action.toggleInlineBreakpoint"]
    },
    {
      "before": ["<leader>", "d", "d"],
      "commands": ["workbench.action.debug.start"]
    },
    {
      "before": ["<leader>", "d", "S"],
      "commands": ["workbench.action.debug.stop"]
    },
    {
      "before": ["<leader>", "d", "c"],
      "commands": ["workbench.action.debug.continue"]
    },
    {
      "before": ["<leader>", "d", "p"],
      "commands": ["workbench.action.debug.pause"]
    },
    {
      "before": ["<leader>", "d", "R"],
      "commands": ["workbench.action.debug.restart"]
    },
    {
      "before": ["<leader>", "d", "i"],
      "commands": ["workbench.action.debug.stepInto"]
    },
    {
      "before": ["<leader>", "d", "s"],
      "commands": ["workbench.action.debug.stepOver"]
    },
    {
      "before": ["<leader>", "d", "o"],
      "commands": ["workbench.action.debug.stepOut"]
    },
    {
      "before": ["<leader>", "d", "j"],
      "commands": ["debug.jumpToCursor"]
    },
    {
      "before": ["<leader>", "d", "W"],
      "commands": ["editor.debug.action.selectionToWatch"]
    },
    // Testing
    {
      "before": ["leader", "t", "d"],
      "commands": ["testing.debugAtCursor"]
    },
    {
      "before": ["leader", "t", "f"],
      "commands": ["testing.runCurrentFile"]
    },
    {
      "before": ["leader", "t", "r"],
      "commands": ["testing.runAtCursor"]
    },
    {
      "before": ["leader", "t", "t"],
      "commands": ["testing.reRunLastRun"]
    },
    // Formatting
    { "before": ["leader", "f"], "commands": ["editor.action.formatDocument"] }
  ],
  "vim.visualModeKeyBindings": [
    // Stay in visual mode while indenting
    { "before": ["<"], "commands": ["editor.action.outdentLines"] },
    { "before": [">"], "commands": ["editor.action.indentLines"] },
    // Move selected lines while staying in visual mode
    { "before": ["J"], "commands": ["editor.action.moveLinesDownAction"] },
    { "before": ["K"], "commands": ["editor.action.moveLinesUpAction"] },
    // toggle comment selection
    { "before": ["leader", "c"], "commands": ["editor.action.commentLine"] },
    // Git hunks
    {
      "before": ["<leader>", "h", "r"], // Revert hunk
      "commands": ["git.revertSelectedRanges"]
    },
    {
      "before": ["<leader>", "h", "s"], // Stage hunk
      "commands": ["git.stageSelectedRanges"]
    },
    {
      "before": ["<leader>", "h", "u"], // Unstage hunk
      "commands": ["git.unstageSelectedRanges"]
    }
  ],
  "vim.visualModeKeyBindingsNonRecursive": [
    // Paste in visual mode without overwriting the clipboard
    {
      "before": ["p"],
      "after": ["p", "g", "v", "y"]
    }
  ],
  "vim.leader": "<space>",
  "vim.handleKeys": {
    "<C-a>": true,
    "<C-/>": true,
    "<C-f>": false
  },

  // To improve performance"
  "extensions.experimental.affinity": {
    "vscodevim.vim": 1
  },
  "vim.smartRelativeLine": true,
  // "typescript.tsserver.maxTsServerMemory": 8092,
  // "typescript.tsserver.nodePath": "/Users/itamar/.local/share/fnm/aliases/default/bin/node",
  "typescript.tsserver.log": "verbose",
  "eslint.runtime": "/Users/itamar/.local/share/fnm/aliases/default/bin/node",
  "eslint.execArgv": ["--max-old-space-size=8192"],
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true
  },
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "eslint.options": {
    "cache": true
  },
  "sqltools.connections": [],
  "editor.quickSuggestions": {
    "strings": "on"
  },
  "whichkey.delay": 10,
  "whichkey.sortOrder": "alphabetically",
  "whichkey.bindings": [
    // Debug
    {
      "key": "d",
      "name": "[D]ebug",
      "type": "bindings",
      "icon": "debug",
      "bindings": [
        {
          "key": "d",
          "name": "Start debug",
          "type": "command",
          "command": "workbench.action.debug.start"
        },
        {
          "key": "S",
          "name": "Stop debug",
          "type": "command",
          "command": "workbench.action.debug.stop"
        },
        {
          "key": "c",
          "name": "Continue debug",
          "type": "command",
          "command": "workbench.action.debug.continue"
        },
        {
          "key": "p",
          "name": "Pause debug",
          "type": "command",
          "command": "workbench.action.debug.pause"
        },
        {
          "key": "R",
          "name": "Restart debug",
          "type": "command",
          "command": "workbench.action.debug.restart"
        },
        {
          "key": "i",
          "name": "Step into",
          "type": "command",
          "command": "workbench.action.debug.stepInto"
        },
        {
          "key": "s",
          "name": "Step over",
          "type": "command",
          "command": "workbench.action.debug.stepOver"
        },
        {
          "key": "o",
          "name": "Step out",
          "type": "command",
          "command": "workbench.action.debug.stepOut"
        },
        {
          "key": "b",
          "name": "Toggle breakpoint",
          "type": "command",
          "command": "editor.debug.action.toggleBreakpoint"
        },
        {
          "key": "B",
          "name": "Toggle inline breakpoint",
          "type": "command",
          "command": "editor.debug.action.toggleInlineBreakpoint"
        },
        {
          "key": "j",
          "name": "Jump to cursor",
          "type": "command",
          "command": "debug.jumpToCursor"
        },
        {
          "key": "W",
          "name": "Add to watch",
          "type": "command",
          "command": "editor.debug.action.selectionToWatch"
        }
      ]
    },
    // Git
    {
      "key": "g",
      "name": "[G]it",
      "type": "bindings",
      "icon": "source-control",
      "bindings": [
        {
          "key": "a",
          "name": "Stage All",
          "type": "command",
          "icon": "expand-all",
          "command": "git.stageAll"
        },
        {
          "key": "b",
          "name": "Checkout",
          "type": "command",
          "icon": "arrow-swap",
          "command": "git.checkout"
        },
        {
          "key": "c",
          "name": "Commit",
          "type": "command",
          "icon": "save",
          "command": "git.commit"
        },
        {
          "key": "g",
          "name": "Lazygit",
          "type": "command",
          "icon": "layout-panel-right",
          "command": "lazygit-vscode.toggle"
        },
        {
          "key": "l",
          "name": "Log",
          "type": "command",
          "icon": "git-commit",
          "command": "gitlens.showQuickRepoHistory"
        },
        {
          "key": "o",
          "name": "Open on remote",
          "type": "command",
          "icon": "globe",
          "command": "gitlens.openFileOnRemote"
        },
        {
          "key": "p",
          "name": "Pull",
          "type": "command",
          "icon": "repo-pull",
          "command": "git.pull"
        },
        {
          "key": "P",
          "name": "Push",
          "type": "command",
          "icon": "repo-push",
          "command": "git.push"
        },
        {
          "key": "r",
          "name": "Reset (discard changes)",
          "type": "command",
          "icon": "discard",
          "command": "git.clean"
        },
        {
          "key": "s",
          "name": "Stage",
          "type": "command",
          "icon": "add",
          "command": "git.stage"
        },
        {
          "key": "S",
          "name": "Stash",
          "type": "command",
          "icon": "git-stash",
          "command": "git.stash"
        },
        {
          "key": "u",
          "name": "Unstage",
          "type": "command",
          "icon": "remove",
          "command": "git.unstage"
        }
      ]
    },
    // Git Hunk
    {
      "key": "h",
      "name": "Git [H]unk",
      "type": "bindings",
      "icon": "diff",
      "bindings": [
        {
          "key": "p",
          "name": "Preview hunk",
          "type": "command",
          "icon": "diff-single",
          "command": "editor.action.dirtydiff.next"
        },
        {
          "key": "r",
          "name": "Revert hunk",
          "type": "command",
          "icon": "discard",
          "command": "git.revertSelectedRanges"
        },
        {
          "key": "s",
          "name": "Stage hunk",
          "type": "command",
          "icon": "diff-added",
          "command": "git.stageSelectedRanges"
        },
        {
          "key": "u",
          "name": "Unstage hunk",
          "type": "command",
          "icon": "diff-removed",
          "command": "git.unstageSelectedRanges"
        }
      ]
    },
    {
      "key": "r",
      "name": "Pull [R]equests",
      "type": "bindings",
      "icon": "git-pull-request",
      "bindings": [
        {
          "key": "c",
          "name": "Create",
          "type": "command",
          "icon": "git-pull-request-create",
          "command": "pr.create"
        },
        {
          "key": "o",
          "name": "Open on GitHub",
          "type": "command",
          "icon": "github-alt",
          "command": "pr.openPullRequestOnGitHub"
        },
        {
          "key": "r",
          "name": "Open PR view",
          "type": "command",
          "icon": "git-pull-request-go-to-changes",
          "commands": [
            "workbench.view.extension.github-pull-request",
            "list.focusFirst",
            "list.focusDown",
            "list.focusDown"
          ]
        },
        {
          "key": "v",
          "name": "Mark file as viewed",
          "type": "commands",
          "icon": "eye",
          "commands": [
            "pr.markFileAsViewed",
            "workbench.view.extension.github-pull-request",
            "focusList",
            "list.focusDown"
          ]
        }
      ]
    },
    // Search
    {
      "key": "s",
      "name": "[S]earch",
      "type": "bindings",
      "icon": "search",
      "bindings": [
        {
          "key": "b",
          "name": "Buffers",
          "type": "command",
          "icon": "window",
          "command": "workbench.action.showAllEditors"
        },
        {
          "key": "f",
          "name": "Files",
          "type": "command",
          "icon": "files",
          "command": "workbench.action.quickOpen"
        },
        {
          "key": "g",
          "name": "Grep search",
          "type": "command",
          "icon": "regex",
          "command": "workbench.action.quickTextSearch"
        },
        {
          "key": "s",
          "name": "Symbols",
          "type": "command",
          "icon": "symbol-keyword",
          "command": "workbench.action.gotoSymbol"
        },
        {
          "key": "t",
          "name": "Terminals",
          "type": "command",
          "icon": "terminal",
          "command": "workbench.action.quickOpenTerm"
        }
      ]
    },
    // Test
    {
      "key": "t",
      "name": "[T]est",
      "icon": "beaker",
      "bindings": [
        {
          "key": "d",
          "name": "Debug at cursor",
          "type": "command",
          "command": "testing.debugAtCursor"
        },
        {
          "key": "f",
          "name": "Run current file",
          "type": "command",
          "command": "testing.runCurrentFile"
        },
        {
          "key": "r",
          "name": "Run at cursor",
          "type": "command",
          "command": "testing.runAtCursor"
        },
        {
          "key": "t",
          "name": "Re-run last run",
          "type": "command",
          "command": "testing.reRunLastRun"
        }
      ]
    },
    // View
    {
      "key": "v",
      "name": "[V]iew",
      "type": "bindings",
      "icon": "go-to-file",
      "bindings": [
        {
          "key": "k",
          "name": "Keybindings json",
          "type": "command",
          "icon": "record-keys",
          "command": "workbench.action.openGlobalKeybindingsFile"
        },
        {
          "key": "s",
          "name": "Settings json",
          "type": "command",
          "icon": "settings",
          "command": "workbench.action.openSettingsJson"
        }
      ]
    },
    {
      "key": "z",
      "name": "Toggle zen mode",
      "type": "command",
      "command": "workbench.action.toggleZenMode"
    }
  ],
  "zenMode.centerLayout": false,
  "zenMode.hideLineNumbers": false,
  "githubPullRequests.pullBranch": "never",
  "gruvboxMaterial.darkContrast": "soft",
  "javascript.updateImportsOnFileMove.enabled": "never",
  "terminal.integrated.defaultProfile.osx": "zsh"
}
