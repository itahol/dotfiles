// Zed keymap
//
// For information on binding keys, see the Zed
// documentation: https://zed.dev/docs/key-bindings
//
// To see the default key bindings run `zed: open default keymap`
// from the command palette.
[
  {
    "context": "Editor && vim_mode == normal",
    "bindings": {
      "space w": "workspace::Save"
    }
  },
  {
    "context": "VimControl && !menu",
    "bindings": {
      // Put key bindings here if you want them to work in normal & visual mode.
      "g r": "editor::FindAllReferences",
      "shift-l": ["vim::EndOfLine", { "displayLines": true }],
      "shift-h": ["vim::FirstNonWhitespace", { "displayLines": true }]
    }
  },
  {
    "context": "Editor && vim_mode == normal && !VimWaiting && !menu",
    "bindings": {
      // put key-bindings here if you want them to work only in normal mode
      // UI
      "ctrl-/": "workspace::ToggleBottomDock",
      "\\": "workspace::ToggleRightDock",
      "space f": "editor::Format",
      "space r n": "editor::Rename",
      // Search
      "space s f": "file_finder::Toggle",
      "space s b": "tab_switcher::Toggle",
      "space s s": "outline::Toggle",
      "space space": "tab_switcher::Toggle",
      // Ctrl-hjkl to move between panes
      "ctrl-h": ["workspace::ActivatePaneInDirection", "Left"],
      "ctrl-l": ["workspace::ActivatePaneInDirection", "Right"],
      "ctrl-k": ["workspace::ActivatePaneInDirection", "Up"],
      "ctrl-j": ["workspace::ActivatePaneInDirection", "Down"],
      // Change tabs tabs
      "shift-l": "pane::ActivateNextItem",
      "shift-h": "pane::ActivatePrevItem",
      // Git
      "space g b": "branches::OpenRecent",
      "space g c": ["task::Spawn", { "task_name": "Git Commit" }],
      "space g g": [
        "task::Spawn",
        { "task_name": "Start lazygit", "target": "center" }
      ],
      "space g s": ["task::Spawn", { "task_name": "Git Stage" }],
      "space g u": ["task::Spawn", { "task_name": "Git Unstage" }],
      "space h s": ["task::Spawn", { "task_name": "hunk-stage" }],
      "space h u": ["task::Spawn", { "task_name": "hunk-unstage" }],
      // Tests
      "space t r": ["task::Spawn", { "task_name": "Run Test" }]
    }
  },
  {
    "context": "vim_mode == visual && !menu",
    "bindings": {
      // Put key bindings here if you want them to work in visual mode.
      "v": "editor::SelectLargerSyntaxNode",
      "V": "editor::SelectSmallerSyntaxNode",
      "shift-j": "editor::MoveLineDown",
      "shift-k": "editor::MoveLineUp"
    }
  },
  {
    // Arount/inside/change surround
    "context": "vim_operator == a || vim_operator == i || vim_operator == cs",
    "use_layout_keys": true,
    "bindings": {
      "q": ["vim::DoubleQuotes", "vim::Quotes"]
    }
  },
  {
    "context": "Dock || OutlinePanel",
    "bindings": {
      "ctrl-h": ["workspace::ActivatePaneInDirection", "Left"],
      "ctrl-l": ["workspace::ActivatePaneInDirection", "Right"],
      "ctrl-k": ["workspace::ActivatePaneInDirection", "Up"],
      "ctrl-j": ["workspace::ActivatePaneInDirection", "Down"]
      // ... or other keybindings
    }
  },
  {
    "context": "Terminal",
    "bindings": {
      "ctrl-/": "workspace::ToggleBottomDock"
    }
  },
  {
    "context": "ProjectPanel && not_editing",
    "bindings": {
      "a": "project_panel::NewFile",
      "A": "project_panel::NewDirectory",
      "x": "project_panel::Cut",
      "y": "project_panel::Copy",
      "p": "project_panel::Paste",
      "r": "project_panel::Rename",
      "d": ["project_panel::Trash", { "skip_prompt": true }],
      "cmd-delete": ["project_panel::Delete", { "skip_prompt": false }],
      "space": "project_panel::Open",
      "\\": "workspace::ToggleRightDock"
    }
  }
]
