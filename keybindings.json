// Place your key bindings in this file to override the defaults
[
  {
    "key": "shift+n",
    "command": "workbench.action.newWindow",
    "when": "!explorerViewletFocus && !inputFocus"
  },
  {
    "key": "alt+right",
    "command": "workbench.action.increaseViewWidth",
    "when": "editorFocus && vim.mode == 'Normal'"
  },
  {
    "key": "alt+left",
    "command": "workbench.action.decreaseViewWidth",
    "when": "editorFocus && vim.mode == 'Normal'"
  },
  {
    "key": "alt+t",
    "command": "workbench.action.increaseViewHeight",
    "when": "editorFocus && vim.mode == 'Normal'"
  },
  {
    "key": "alt+s",
    "command": "workbench.action.decreaseViewHeight",
    "when": "editorFocus && vim.mode == 'Normal'"
  },
  // NAVIGATION
  {
    "key": "ctrl+l",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "sideBarFocus"
  },
  {
    "key": "ctrl+h",
    "command": "workbench.action.focusSideBar",
    "when": "editorFocus && vim.mode == 'Normal' && sideBarVisible && activeEditorGroupIndex == 1"
  },
  {
    "key": "ctrl+h",
    "command": "workbench.action.focusSideBar",
    "when": "terminalFocus && sideBarVisible"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "terminalFocus"
  },
  // Search
  {
    "key": "ctrl+j",
    "command": "search.action.focusSearchList",
    "when": "focusedView == workbench.view.search"
  },
  {
    "key": "ctrl+k",
    "command": "search.action.focusFilesToExclude",
    "when": "focusedView == workbench.view.search"
  },
  // Source Control
  {
    "key": "ctrl+j",
    "command": "extension.multiCommand.execute",
    "args": {
      "sequence": [
        "list.focusFirst",
        "list.focusDown",
        "list.focusDown",
        "list.focusDown"
      ]
    },
    "when": "focusedView == workbench.scm"
  },
  {
    "key": "ctrl+k",
    "command": "extension.multiCommand.execute",
    "args": {
      "sequence": [
        "list.focusFirst",
        "list.focusUp",
        "list.focusUp",
        "list.focusUp",
        "list.select"
      ]
    },
    "when": "focusedView == workbench.scm"
  },
  {
    "key": "space g",
    "when": "focusedView == workbench.scm && !inputFocus",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  // Terminal
  {
    "key": "ctrl+shift+b",
    "command": "workbench.action.terminal.focusPrevious",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+shift+j",
    "command": "workbench.action.togglePanel"
  },
  {
    "key": "ctrl+shift+n",
    "command": "workbench.action.terminal.new",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+shift+w",
    "command": "workbench.action.terminal.kill",
    "when": "terminalFocus"
  },
  // Copilot rename suggestions navigation
  // {
  //   "key": "ctrl+n",
  //   "command": "github.copilot.nextPanelSolution",
  //   "when": "renameInputFocused"
  // },
  // Hover
  {
    "key": "g g",
    "command": "editor.action.goToTopHover",
    "when": "editorHoverFocused"
  },
  {
    "key": "shift+g",
    "command": "editor.action.goToBottomHover",
    "when": "editorHoverFocused"
  },
  {
    "key": "h",
    "command": "editor.action.scrollLeftHover",
    "when": "editorHoverFocused"
  },
  {
    "key": "j",
    "command": "editor.action.scrollDownHover",
    "when": "editorHoverFocused"
  },
  {
    "key": "k",
    "command": "editor.action.scrollUpHover",
    "when": "editorHoverFocused"
  },
  {
    "key": "l",
    "command": "editor.action.scrollRightHover",
    "when": "editorHoverFocused"
  },
  // Toggle between peek widget and editor
  {
    "key": "tab",
    "command": "togglePeekWidgetFocus",
    "when": "inReferenceSearchEditor && vim.active && vim.mode != 'Insert' || referenceSearchVisible"
  },
  // Sidebar
  {
    "command": "workbench.action.toggleSidebarVisibility",
    "key": "ctrl+e"
  },
  {
    "command": "workbench.files.action.focusFilesExplorer",
    "key": "ctrl+e",
    "when": "editorTextFocus"
  },
  {
    "key": "n",
    "command": "explorer.newFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "d",
    "command": "deleteFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "shift+n",
    "command": "explorer.newFolder",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "r",
    "command": "renameFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "x",
    "command": "filesExplorer.cut",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "y",
    "command": "filesExplorer.copy",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
  },
  {
    "key": "p",
    "command": "filesExplorer.paste",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
  }
]
