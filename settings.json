{
  "workbench.colorTheme": "Ayu Mirage",
  // we try to make semantic highlighting look good
  "editor.semanticHighlighting.enabled": true,
  // prevent VSCode from modifying the terminal colors
  "terminal.integrated.minimumContrastRatio": 1,
  // "catppuccin.italicKeywords": false,
  // make the window's titlebar use the workbench colors
  "window.titleBarStyle": "custom",
  "workbench.iconTheme": "ayu",
  "editor.fontFamily": "JetBrainsMono Nerd Font Mono, Menlo, Monaco, 'Courier New', monospace",
  "editor.fontSize": 14,
  "editor.fontLigatures": true,
  "editor.wordWrap": "on",
  "editor.lineNumbers": "relative",
  "editor.suggest.insertMode": "insert",
  "editor.cursorSurroundingLines": 7,
  "editor.bracketPairColorization.enabled": true,
  "editor.guides.bracketPairs": "active",
  "editor.codeActionsOnSave": {
    "source.fixAll": "never"
  },
  // "find-it-faster.general.useTerminalInEditor": true,
  "cSpell.diagnosticLevel": "Hint",
  "workbench.colorCustomizations": {
    "editorHint.border": "#ffcc66",
    "editorHint.foreground": "#f000"
  },
  "javascript.inlayHints.enumMemberValues.enabled": true,
  "javascript.inlayHints.functionLikeReturnTypes.enabled": true,
  "javascript.inlayHints.parameterNames.enabled": "all",
  "typescript.inlayHints.enumMemberValues.enabled": true,
  "typescript.inlayHints.functionLikeReturnTypes.enabled": true,
  "typescript.inlayHints.parameterNames.enabled": "all",
  "typescript.inlayHints.parameterTypes.enabled": true,
  "typescript.inlayHints.propertyDeclarationTypes.enabled": true,
  "typescript.inlayHints.variableTypes.enabled": true,
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "editor.formatOnSave": true,
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "eslint.codeActionsOnSave.rules": null,
  "git.autofetch": "all",
  "debug.javascript.autoAttachFilter": "disabled",
  "cSpell.userWords": [
    "Catppuccin",
    "Cmin",
    "CORALOGIX",
    "Ctid",
    "cyera",
    "lucene",
    "nino",
    "titlebar",
    "Uids",
    "upserted"
  ],
  "typescript.disableAutomaticTypeAcquisition": true,
  "settingsSync.keybindingsPerPlatform": false,
  "git.confirmSync": false,
  "gitlens.views.commitDetails.files.layout": "tree",
  // "python.analysis.nodeExecutable": "${env:FNM_DIR}/aliases/default/bin/node",
  "python.analysis.nodeExecutable": "/Users/itamar/.local/share/fnm/aliases/default/bin/node",
  "workbench.settings.applyToAllProfiles": ["python.analysis.nodeExecutable"],
  "terminal.integrated.fontSize": 15,
  "terminal.integrated.fontFamily": "JetBrainsMono Nerd Font Mono",
  "editor.minimap.enabled": false,
  "githubPullRequests.fileListLayout": "tree",
  "editor.accessibilitySupport": "off",
  "sqlsurge.customRawSqlQuery": {
    "language": "typescript",
    "configs": [
      {
        "functionName": "query",
        "sqlArgNo": 1,
        "isTemplateLiteral": true
      },
      {
        "functionName": "query",
        "sqlArgNo": 1,
        "isTemplateLiteral": false
      },
      {
        "functionName": "streamValidatedQuery",
        "sqlArgNo": 3,
        "isTemplateLiteral": true
      },
      {
        "functionName": "streamValidatedQuery",
        "sqlArgNo": 3,
        "isTemplateLiteral": false
      }
    ]
  },
  "workbench.editor.revealIfOpen": true,
  "vim.easymotion": false,
  "vim.highlightedyank.enable": true,
  "vim.highlightedyank.duration": 100,
  "vim.incsearch": true,
  "vim.useSystemClipboard": true,
  "vim.useCtrlKeys": true,
  "vim.hlsearch": true,
  "vim.operatorPendingModeKeyBindings": [
    {
      "before": ["{"],
      "after": ["w"]
    },
    {
      "before": ["L"],
      "after": ["$"]
    },
    {
      "before": ["H"],
      "after": ["^"]
    }
  ],
  "vim.insertModeKeyBindings": [
    {
      "before": ["j", "j"],
      "after": ["<Esc>"]
    },
    {
      "before": ["<C-h>"],
      "commands": ["editor.action.triggerParameterHints"],
      "silent": true
    },
    {
      "before": ["<C-h>"],
      "commands": ["editor.action.triggerParameterHints"],
      "silent": true
    }
  ],
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": ["0"],
      "after": ["_"]
    },
    {
      "before": ["<leader>", ";"],
      "commands": ["whichkey.show"]
    },
    // Toggle Github Pull Requests
    {
      "before": ["<leader>", "r"],
      "commands": ["workbench.view.extension.github-pull-request", "focusList"]
    },
    {
      "before": ["<C-n>"],
      "commands": [":nohl"]
    },
    // NAVIGATION
    // switch b/w buffers
    { "before": ["<S-h>"], "commands": [":bprevious"], "silent": true },
    { "before": ["<S-l>"], "commands": [":bnext"], "silent": true },

    // splits
    { "before": ["leader", "v"], "commands": [":vsplit"] },
    { "before": ["leader", "h"], "commands": [":split"] },

    // panes
    {
      "before": ["<C-h>"],
      "commands": ["workbench.action.focusLeftGroup"],
      "silent": true
    },
    {
      "before": ["<C-j>"],
      "commands": ["workbench.action.navigateDown"],
      "silent": true
    },
    {
      "before": ["<C-k>"],
      "commands": ["workbench.action.navigateUp"],
      "silent": true
    },
    {
      "before": ["<C-l>"],
      "commands": ["workbench.action.focusRightGroup"],
      "silent": true
    },
    // vertical scrolling
    {
      "before": ["<C-d>"],
      "after": ["<C-d>", "z", "t"]
    },
    {
      "before": ["<C-u>"],
      "after": ["<C-u>", "z", "t"]
    },
    // NICE TO HAVE
    {
      "before": ["leader", "z"],
      "commands": [
        "workbench.action.closeSidebar",
        "workbench.action.closePanel"
      ],
      "silent": true
    },
    {
      "before": ["u"],
      "commands": ["undo"]
    },
    {
      "before": ["<C-r>"],
      "commands": ["redo"]
    },
    { "before": ["leader", "w"], "commands": [":w!"] },
    { "before": ["leader", "q"], "commands": [":q!"] },
    { "before": ["leader", "x"], "commands": [":x!"] },
    {
      "before": ["[", "d"],
      "commands": ["editor.action.marker.prev"]
    },
    {
      "before": ["]", "d"],
      "commands": ["editor.action.marker.next"]
    },
    {
      "before": ["<leader>", "r", "n"],
      "commands": ["editor.action.rename"]
    },
    {
      "before": ["<leader>", "c", "a"],
      "commands": ["editor.action.quickFix"]
    },
    {
      "before": ["leader", "f"],
      "commands": ["editor.action.formatDocument"]
    },
    {
      "before": ["leader", "f", "i"],
      "commands": [
        "editor.action.organizeImports",
        "editor.action.formatDocument"
      ]
    },
    // LSP
    {
      "before": ["g", "d"],
      "after": ["g", "d", "z", "t"],
      "silent": true
    },
    {
      "before": ["g", "p", "d"],
      "commands": ["editor.action.peekDefinition"],
      "silent": true
    },
    {
      "before": ["g", "i"],
      "commands": ["editor.action.goToImplementation"],
      "silent": true
    },
    {
      "before": ["g", "p", "i"],
      "commands": ["editor.action.peekImplementation"],
      "silent": true
    },
    {
      "before": ["g", "r"],
      "commands": ["editor.action.referenceSearch.trigger"],
      "silent": true
    },
    {
      "before": ["g", "t"],
      "commands": ["editor.action.goToTypeDefinition"],
      "silent": true
    },
    {
      "before": ["g", "p", "t"],
      "commands": ["editor.action.peekTypeDefinition"],
      "silent": true
    },
    {
      "before": ["K"],
      "commands": ["editor.action.showDefinitionPreviewHover"],
      "silent": true
    }
  ],
  "vim.normalModeKeyBindings": [
    // Code search
    {
      "before": ["<leader>", "s", "f"],
      "commands": ["workbench.action.quickOpen"],
      "silent": true
    },
    {
      "before": ["<leader>", "s", "s"],
      "commands": ["workbench.action.gotoSymbol"],
      "silent": true
    },
    // Harpoon
    {
      "before": ["<leader>", "a"],
      "commands": ["vscode-harpoon.addEditor"]
    },
    {
      "before": ["<leader>", "e"],
      "commands": ["vscode-harpoon.editorQuickPick"],
      "silent": true
    },
    {
      "before": ["<leader>", "j"],
      "commands": ["vscode-harpoon.gotoEditor1"],
      "silent": true
    },
    {
      "before": ["<leader>", "k"],
      "commands": ["vscode-harpoon.gotoEditor2"],
      "silent": true
    },
    {
      "before": ["<leader>", "l"],
      "commands": ["vscode-harpoon.gotoEditor3"],
      "silent": true
    },
    // Bookmarks
    {
      "before": ["<leader>", "m"],
      "commands": ["bookmarks.toggle"]
    },
    {
      "before": ["<leader>", "b", "l"],
      "commands": ["bookmarks.list"]
    },
    {
      "before": ["<leader>", "b", "a"],
      "commands": ["bookmarks.listFromAllFiles"]
    },
    {
      "before": ["<leader>", "b", "c"],
      "commands": ["bookmarks.clear"]
    },
    {
      "before": ["<leader>", "b", "r"],
      "commands": ["bookmarks.clearFromAllFiles"]
    },
    // Settings navigation
    {
      "before": ["<leader>", "p", "s"],
      "commands": ["workbench.action.openSettingsJson"]
    },
    {
      "before": ["<leader>", "p", "k"],
      "commands": ["workbench.action.openGlobalKeybindingsFile"]
    },
    // Source Control
    {
      "before": ["<leader>", "g"],
      "commands": ["workbench.view.scm", "workbench.scm.focus"]
    },
    // Debugging
    {
      "before": ["<leader>", "d", "b"],
      "commands": ["editor.debug.action.toggleBreakpoint"]
    },
    // Testing
    {
      "before": ["leader", "t", "f"],
      "commands": ["testing.runCurrentFile"]
    },
    {
      "before": ["leader", "t", "d", "c"],
      "commands": ["testing.debugAtCursor"]
    },
    {
      "before": ["leader", "t", "t"],
      "commands": ["testing.reRunLastRun"]
    },
    {
      "before": ["leader", "t", "c"],
      "commands": ["testing.runAtCursor"]
    },
    // Formatting
    { "before": ["leader", "p"], "commands": ["editor.action.formatDocument"] }
  ],
  "vim.visualModeKeyBindings": [
    // Stay in visual mode while indenting
    { "before": ["<"], "commands": ["editor.action.outdentLines"] },
    { "before": [">"], "commands": ["editor.action.indentLines"] },
    // Move selected lines while staying in visual mode
    { "before": ["J"], "commands": ["editor.action.moveLinesDownAction"] },
    { "before": ["K"], "commands": ["editor.action.moveLinesUpAction"] },
    // toggle comment selection
    { "before": ["leader", "c"], "commands": ["editor.action.commentLine"] }
  ],
  "vim.visualModeKeyBindingsNonRecursive": [
    {
      "before": [";"],
      "commands": ["whichkey.show"]
    },
    // Paste in visual mode without overwriting the clipboard
    {
      "before": ["p"],
      "after": ["p", "g", "v", "y"]
    }
  ],
  "vim.leader": "<space>",
  "vim.handleKeys": {
    "<C-a>": true,
    "<C-f>": false
  },

  // To improve performance"
  "extensions.experimental.affinity": {
    "vscodevim.vim": 1
  },
  "vim.smartRelativeLine": true,
  "typescript.tsserver.maxTsServerMemory": 8092,
  "typescript.tsserver.nodePath": "/Users/itamar/.local/share/fnm/aliases/default/bin/node",
  "typescript.tsserver.log": "off",
  "eslint.runtime": "/Users/itamar/.local/share/fnm/aliases/default/bin/node",
  "eslint.execArgv": ["--max-old-space-size=8192"],
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true
  },
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "eslint.options": {
    "cache": true
  },
  "sqltools.connections": [],
  "editor.quickSuggestions": {
    "strings": "on"
  },
  "whichkey.delay": 0,
  "whichkey.sortOrder": "alphabetically",
  "whichkey.bindings": [
    {
      "key": ";",
      "name": "commands",
      "type": "command",
      "command": "workbench.action.showCommands"
    },
    {
      "key": "/",
      "name": "comment",
      "type": "command",
      "command": "editor.action.commentLine"
    },
    {
      "key": "b",
      "name": "Buffers/Editors...",
      "type": "bindings",
      "bindings": [
        {
          "key": "b",
          "name": "Show all buffers/editors",
          "type": "command",
          "command": "workbench.action.showAllEditors"
        },
        {
          "key": "d",
          "name": "Close active editor",
          "type": "command",
          "command": "workbench.action.closeActiveEditor"
        },
        {
          "key": "h",
          "name": "Move editor into left group",
          "type": "command",
          "command": "workbench.action.moveEditorToLeftGroup"
        },
        {
          "key": "j",
          "name": "Move editor into below group",
          "type": "command",
          "command": "workbench.action.moveEditorToBelowGroup"
        },
        {
          "key": "k",
          "name": "Move editor into above group",
          "type": "command",
          "command": "workbench.action.moveEditorToAboveGroup"
        },
        {
          "key": "l",
          "name": "Move editor into right group",
          "type": "command",
          "command": "workbench.action.moveEditorToRightGroup"
        },
        {
          "key": "m",
          "name": "Close other editors",
          "type": "command",
          "command": "workbench.action.closeOtherEditors"
        },
        {
          "key": "n",
          "name": "Next editor",
          "type": "command",
          "command": "workbench.action.nextEditor"
        },
        {
          "key": "p",
          "name": "Previous editor",
          "type": "command",
          "command": "workbench.action.previousEditor"
        },
        {
          "key": "N",
          "name": "New untitled editor",
          "type": "command",
          "command": "workbench.action.files.newUntitledFile"
        },
        {
          "key": "u",
          "name": "Reopen closed editor",
          "type": "command",
          "command": "workbench.action.reopenClosedEditor"
        },
        {
          "key": "y",
          "name": "Copy buffer to clipboard",
          "type": "commands",
          "commands": [
            "editor.action.selectAll",
            "editor.action.clipboardCopyAction",
            "cancelSelection"
          ]
        }
      ]
    },
    {
      "key": "d",
      "name": "Debug...",
      "type": "bindings",
      "bindings": [
        {
          "key": "d",
          "name": "Start debug",
          "type": "command",
          "command": "workbench.action.debug.start"
        },
        {
          "key": "S",
          "name": "Stop debug",
          "type": "command",
          "command": "workbench.action.debug.stop"
        },
        {
          "key": "c",
          "name": "Continue debug",
          "type": "command",
          "command": "workbench.action.debug.continue"
        },
        {
          "key": "p",
          "name": "Pause debug",
          "type": "command",
          "command": "workbench.action.debug.pause"
        },
        {
          "key": "r",
          "name": "Run without debugging",
          "type": "command",
          "command": "workbench.action.debug.run"
        },
        {
          "key": "R",
          "name": "Restart debug",
          "type": "command",
          "command": "workbench.action.debug.restart"
        },
        {
          "key": "i",
          "name": "Step into",
          "type": "command",
          "command": "workbench.action.debug.stepInto"
        },
        {
          "key": "s",
          "name": "Step over",
          "type": "command",
          "command": "workbench.action.debug.stepOver"
        },
        {
          "key": "o",
          "name": "Step out",
          "type": "command",
          "command": "workbench.action.debug.stepOut"
        },
        {
          "key": "b",
          "name": "Toggle breakpoint",
          "type": "command",
          "command": "editor.debug.action.toggleBreakpoint"
        },
        {
          "key": "B",
          "name": "Toggle inline breakpoint",
          "type": "command",
          "command": "editor.debug.action.toggleInlineBreakpoint"
        },
        {
          "key": "j",
          "name": "Jump to cursor",
          "type": "command",
          "command": "debug.jumpToCursor"
        },
        {
          "key": "v",
          "name": "REPL",
          "type": "command",
          "command": "workbench.debug.action.toggleRepl"
        },
        {
          "key": "w",
          "name": "Focus on watch window",
          "type": "command",
          "command": "workbench.debug.action.focusWatchView"
        },
        {
          "key": "W",
          "name": "Add to watch",
          "type": "command",
          "command": "editor.debug.action.selectionToWatch"
        }
      ]
    },
    {
      "key": "e",
      "name": "Toggle Explorer",
      "type": "command",
      "command": "workbench.action.toggleSidebarVisibility"
    },
    {
      "key": "f",
      "name": "Find & Replace...",
      "type": "bindings",
      "bindings": [
        {
          "key": "f",
          "name": "File",
          "type": "command",
          "command": "editor.action.startFindReplaceAction"
        },
        {
          "key": "s",
          "name": "Symbol",
          "type": "command",
          "command": "editor.action.rename",
          "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
        },
        {
          "key": "p",
          "name": "Project",
          "type": "command",
          "command": "workbench.action.replaceInFiles"
        }
      ]
    },
    {
      "key": "g",
      "name": "Git...",
      "type": "bindings",
      "bindings": [
        {
          "key": "b",
          "name": "Checkout",
          "type": "command",
          "command": "git.checkout"
        },
        {
          "key": "c",
          "name": "Commit",
          "type": "command",
          "command": "git.commit"
        },
        {
          "key": "d",
          "name": "Delete Branch",
          "type": "command",
          "command": "git.deleteBranch"
        },
        {
          "key": "f",
          "name": "Fetch",
          "type": "command",
          "command": "git.fetch"
        },
        {
          "key": "i",
          "name": "Init",
          "type": "command",
          "command": "git.init"
        },
        {
          "key": "m",
          "name": "Merge",
          "type": "command",
          "command": "git.merge"
        },
        {
          "key": "p",
          "name": "Publish",
          "type": "command",
          "command": "git.publish"
        },
        {
          "key": "s",
          "name": "Stash",
          "type": "command",
          "command": "workbench.view.scm"
        },
        {
          "key": "S",
          "name": "Stage",
          "type": "command",
          "command": "git.stage"
        },
        {
          "key": "U",
          "name": "Unstage",
          "type": "command",
          "command": "git.unstage"
        }
      ]
    },
    {
      "key": "h",
      "name": "Harpoon",
      "type": "bindings",
      "bindings": [
        {
          "key": "a",
          "name": "Add editor",
          "type": "command",
          "command": "vscode-harpoon.addEditor"
        },
        {
          "key": "p",
          "name": "Editor quick pick",
          "type": "command",
          "command": "vscode-harpoon.editorQuickPick"
        },
        {
          "key": "e",
          "name": "Edit editors list",
          "type": "command",
          "command": "vscode-harpoon.editEditors"
        }
      ]
    },
    {
      "key": "i",
      "name": "Insert...",
      "type": "bindings",
      "bindings": [
        {
          "key": "j",
          "name": "Insert line below",
          "type": "command",
          "command": "editor.action.insertLineAfter"
        },
        {
          "key": "k",
          "name": "Insert line above",
          "type": "command",
          "command": "editor.action.insertLineBefore"
        },
        {
          "key": "s",
          "name": "Insert snippet",
          "type": "command",
          "command": "editor.action.insertSnippet"
        }
      ]
    },

    {
      "key": "m",
      "name": "minimap",
      "type": "command",
      "command": "editor.action.toggleMinimap"
    },
    // {
    //   "key": "n",
    //   "name": "highlight",
    //   "type": "command",
    //   "command": "vscode-neovim.send",
    //   "args": ":noh<CR>"
    // },
    {
      "key": "s",
      "name": "Search...",
      "type": "bindings",
      "bindings": [
        {
          "key": "f",
          "name": "files",
          "type": "command",
          "command": "workbench.action.quickOpen"
        },
        {
          "key": "t",
          "name": "text",
          "type": "command",
          "command": "workbench.action.findInFiles"
        }
      ]
    },
    {
      "key": "S",
      "name": "Show...",
      "type": "bindings",
      "bindings": [
        {
          "key": "e",
          "name": "Show explorer",
          "type": "command",
          "command": "workbench.view.explorer"
        },
        {
          "key": "s",
          "name": "Show search",
          "type": "command",
          "command": "workbench.view.search"
        },
        {
          "key": "g",
          "name": "Show source control",
          "type": "command",
          "command": "workbench.view.scm"
        },
        {
          "key": "t",
          "name": "Show test",
          "type": "command",
          "command": "workbench.view.extension.test"
        },
        {
          "key": "r",
          "name": "Show remote explorer",
          "type": "command",
          "command": "workbench.view.remote"
        },
        {
          "key": "x",
          "name": "Show extensions",
          "type": "command",
          "command": "workbench.view.extensions"
        },
        {
          "key": "p",
          "name": "Show problem",
          "type": "command",
          "command": "workbench.actions.view.problems"
        },
        {
          "key": "o",
          "name": "Show output",
          "type": "command",
          "command": "workbench.action.output.toggleOutput"
        },
        {
          "key": "d",
          "name": "Show debug console",
          "type": "command",
          "command": "workbench.debug.action.toggleRepl"
        }
      ]
    },
    {
      "key": "t",
      "name": "Terminal...",
      "type": "bindings",
      "bindings": [
        {
          "key": "t",
          "name": "Toggle Terminal",
          "type": "command",
          "command": "workbench.action.togglePanel"
        }
      ]
    },
    {
      "key": "T",
      "name": "UI toggles...",
      "type": "bindings",
      "bindings": [
        {
          "key": "b",
          "name": "Toggle side bar visibility",
          "type": "command",
          "command": "workbench.action.toggleSidebarVisibility"
        },
        {
          "key": "j",
          "name": "Toggle panel visibility",
          "type": "command",
          "command": "workbench.action.togglePanel"
        },
        {
          "key": "F",
          "name": "Toggle full screen",
          "type": "command",
          "command": "workbench.action.toggleFullScreen"
        },
        {
          "key": "s",
          "name": "Select theme",
          "type": "command",
          "command": "workbench.action.selectTheme"
        },
        {
          "key": "m",
          "name": "Toggle maximized panel",
          "type": "command",
          "command": "workbench.action.toggleMaximizedPanel"
        },
        {
          "key": "t",
          "name": "Toggle tool/activity bar visibility",
          "type": "command",
          "command": "workbench.action.toggleActivityBarVisibility"
        },
        {
          "key": "T",
          "name": "Toggle tab visibility",
          "type": "command",
          "command": "workbench.action.toggleTabsVisibility"
        }
      ]
    },
    // {
    //   "key": "v",
    //   "name": "Split Vertical",
    //   "type": "command",
    //   "command": "workbench.action.splitEditor"
    // },
    {
      "key": "w",
      "name": "Window...",
      "type": "bindings",
      "bindings": [
        {
          "key": "W",
          "name": "Focus previous editor group",
          "type": "command",
          "command": "workbench.action.focusPreviousGroup"
        },
        {
          "key": "h",
          "name": "Move editor group left",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupLeft"
        },
        {
          "key": "j",
          "name": "Move editor group down",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupDown"
        },
        {
          "key": "k",
          "name": "Move editor group up",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupUp"
        },
        {
          "key": "l",
          "name": "Move editor group right",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupRight"
        },
        {
          "key": "t",
          "name": "Toggle editor group sizes",
          "type": "command",
          "command": "workbench.action.toggleEditorWidths"
        },
        {
          "key": "m",
          "name": "Maximize editor group",
          "type": "command",
          "command": "workbench.action.minimizeOtherEditors"
        },
        {
          "key": "M",
          "name": "Maximize editor group and hide side bar",
          "type": "command",
          "command": "workbench.action.maximizeEditor"
        },
        {
          "key": "=",
          "name": "Reset editor group sizes",
          "type": "command",
          "command": "workbench.action.evenEditorWidths"
        },
        {
          "key": "z",
          "name": "Combine all editors",
          "type": "command",
          "command": "workbench.action.joinAllGroups"
        },
        {
          "key": "d",
          "name": "Close editor group",
          "type": "command",
          "command": "workbench.action.closeEditorsInGroup"
        },
        {
          "key": "x",
          "name": "Close all editor groups",
          "type": "command",
          "command": "workbench.action.closeAllGroups"
        }
      ]
    },
    {
      "key": "z",
      "name": "Toggle zen mode",
      "type": "command",
      "command": "workbench.action.toggleZenMode"
    }
  ],
  "zenMode.centerLayout": false,
  "zenMode.hideLineNumbers": false,
  "githubPullRequests.pullBranch": "never",
  "[sql]": {
    "editor.defaultFormatter": "mtxr.sqltools"
  },
  "eslint.lintTask.options": ". --cache"
}
